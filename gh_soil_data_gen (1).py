# -*- coding: utf-8 -*-
"""gh_soil_data_gen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19lK6AX1wiLkS7kfZOkseSeTqn3BgVGT9
"""

import pandas as pd
import numpy as np
import random

# References for soil data
# [1] https://www.britannica.com/place/Ghana/Soils
# [2] https://www.ghanadistricts.com/Home/LinkDataDistrict/5150
# [3] https://www.fao.org/3/CA3405EN/ca3405en.pdf
# [4] https://www.frontiersin.org/articles/10.3389/fenvs.2018.00119/full
# [5] https://www.sciencedirect.com/science/article/abs/pii/S0016706118319074

def generate_soil_data():
    soil_types = ["tropical black earths", "tropical gray earths", "acid vleisols", "sodium vleisols", "lateritic soils", "ochrosols", "oxisol", "Akuse clay"]
    soil_data = []

    for soil_type in soil_types:
        soil_ph = round(random.uniform(4.5, 7.4), 2)
        organic_carbon = round(random.uniform(0.05, 43.5), 2)  # Mg C ha-1
        nitrogen_content = round(random.uniform(0.01, 0.05), 2)  # Placeholder value
        phosphorus_content = round(random.uniform(0.01, 0.05), 2)  # Placeholder value
        potassium_content = round(random.uniform(0.01, 0.05), 2)  # Placeholder value
        cec = round(random.uniform(10, 40), 2)  # Placeholder value for CEC (meq/100g)
        ec = round(random.uniform(0.1, 1.5), 2)  # Placeholder value for EC (dS/m)
        soil_moisture_content = round(random.uniform(10.0, 30.0), 2)  # Placeholder value (%)

        soil_data.append({
            "Soil Type": soil_type,
            "Soil pH (pH)": soil_ph,
            "Organic Carbon (Mg C ha-1)": organic_carbon,
            "Nitrogen (N) Content (%)": nitrogen_content,
            "Phosphorus (P) Content (%)": phosphorus_content,
            "Potassium (K) Content (%)": potassium_content,
            "Cation Exchange Capacity (CEC) (meq/100g)": cec,
            "Electrical Conductivity (EC) (dS/m)": ec,
            "Soil Moisture Content (%)": soil_moisture_content
        })

    return pd.DataFrame(soil_data)

# Generate and save the soil data to a CSV file
soil_data_df = generate_soil_data()
soil_data_df.to_csv("ghana_soil_data.csv", index=False)
print("Ghana soil data generated and saved.")